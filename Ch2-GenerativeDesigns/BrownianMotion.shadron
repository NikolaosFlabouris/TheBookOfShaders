// Implementaion of the functions described in
// The Book of Shaders, Chapter: Generative Designs - Brownian Motion.

#extension gif

#include <hsv>
#include <math_constants>

const int WIDTH = 720;
const int HEIGHT = 720;

parameter int Function_Selector = 1 : range(1, 3);

variable vec2 mousePos = vec2(0.0);

// Updates global variable storing mouse position.
procedure updateMousePos(vec2 mouse)
{
    mousePos.x = min(mouse.x, WIDTH);
    mousePos.y = min(mouse.y, HEIGHT);
}

// Event to trigger the update of the mouse position.
event mouse_position() = updateMousePos;

// A deterministic random function.
glsl vec2 random2(vec2 pos)
{
    return fract(sin(vec2(dot(pos, vec2(127.1, 311.7)), dot(pos, vec2(269.5, 183.3)))) * 43758.5453);
}

glsl vec4 funct(vec2 position)
{
    return vec4(vec3(1.0),1.0);
}

glsl vec4 shaderPicker(vec2 position)
{
    switch(Function_Selector)
    {
    case 1:
        return funct(position);
    default:
        break;
    }
}

animation myShader = glsl(shaderPicker, WIDTH, HEIGHT);

export gif(myShader, "myGif.gif", 30, 6.2831, true);